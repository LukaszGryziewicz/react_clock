{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","timeUpdater","setInterval","setState","this","prevProps","toLocaleTimeString","console","log","prevName","name","props","clearInterval","className","React","Component","App","clockName","isClockVisible","generateClockName","randomNumber","Math","round","random","hideClock","showClock","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,YAAcC,aAAY,WACxB,EAAKC,SAAS,CAAEJ,KAAM,IAAIC,SACzB,KAPL,uDASE,WACE,OAAOI,KAAKH,cAVhB,gCAaE,SAAmBI,GACjB,IAAMN,EAAOK,KAAKN,MAAMC,KAAKO,qBAE7BC,QAAQC,IAAIT,GAEZ,IAAMU,EAAWJ,EAAUK,KACnBA,EAASN,KAAKO,MAAdD,KAEJA,IAASD,GACXF,QAAQC,IAAR,qCAA0CC,EAA1C,eAAyDC,MAtB/D,kCA0BE,WACEE,cAAcR,KAAKH,eA3BvB,oBA8BE,WACE,IAAMF,EAAOK,KAAKN,MAAMC,KAAKO,qBAE7B,OACE,qBAAKO,UAAU,QAAf,SACE,qBAAIA,UAAU,cAAd,0BAEGd,WArCX,GAA2Be,IAAMC,WCF3BC,E,4MACJlB,MAAQ,CACNmB,UAAW,EACXC,gBAAgB,G,EAGlBC,kBAAoB,WAClB,IAAMC,EAAeC,KAAKC,MAAsB,IAAhBD,KAAKE,UAErC,EAAKpB,SAAS,CAAEc,UAAWG,K,EAG7BI,UAAY,WACV,EAAKrB,SAAS,CAAEe,gBAAgB,K,EAGlCO,UAAY,WACV,EAAKtB,SAAS,CAAEe,gBAAgB,K,4CAGlC,WACE,IAAQD,EAAcb,KAAKN,MAAnBmB,UAER,OACE,qBAAKJ,UAAU,MAAf,SACE,sBAAKA,UAAU,eAAf,UACE,mDACkBI,KAElB,sBAAKJ,UAAU,eAAf,UACE,wBAAQa,KAAK,SAASC,QAASvB,KAAKoB,UAApC,wBAIA,wBAAQE,KAAK,SAASC,QAASvB,KAAKqB,UAApC,wBAIA,wBAAQC,KAAK,SAASC,QAASvB,KAAKe,kBAApC,8BAIDf,KAAKN,MAAMoB,gBACP,cAAC,EAAD,CAAO,UAAQ,OAAOR,KAAMO,a,GA3CzBH,IAAMC,WAkDTC,ICxDfY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fb744719.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\n\ntype Props = {\n  name: number;\n};\n\ntype State = {\n  time: Date;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: new Date(),\n  };\n\n  timeUpdater = setInterval(() => {\n    this.setState({ time: new Date() });\n  }, 1000);\n\n  componentDidMount() {\n    return this.timeUpdater;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const time = this.state.time.toLocaleTimeString();\n\n    console.log(time);\n\n    const prevName = prevProps.name;\n    const { name } = this.props;\n\n    if (name !== prevName) {\n      console.log(`The Clock was renamed from ${prevName} to ${name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timeUpdater);\n  }\n\n  render() {\n    const time = this.state.time.toLocaleTimeString();\n\n    return (\n      <div className=\"clock\">\n        <h2 className=\"clock__time\">\n          Current time:\n          {time}\n        </h2>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  clockName: number;\n  isClockVisible: boolean\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    clockName: 1,\n    isClockVisible: true,\n  };\n\n  generateClockName = () => {\n    const randomNumber = Math.round(Math.random() * 1000);\n\n    this.setState({ clockName: randomNumber });\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  render() {\n    const { clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__wrapper\">\n          <h1>\n            {`Clock Name: ${clockName}`}\n          </h1>\n          <div className=\"App__buttons\">\n            <button type=\"button\" onClick={this.hideClock}>\n              Hide clock\n            </button>\n\n            <button type=\"button\" onClick={this.showClock}>\n              Show clock\n            </button>\n\n            <button type=\"button\" onClick={this.generateClockName}>\n              Generate name\n            </button>\n          </div>\n          {this.state.isClockVisible\n            && <Clock data-cy=\"time\" name={clockName} />}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}